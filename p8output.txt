
gcc -g p6original.c
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x83c: file p6original.c, line 21.
(gdb) r
Starting program: /home/runner/ppa-IA2-practice2-6/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p6original.c:21
21  {
(gdb) n
23    input_string(a);
(gdb) s
input_string (a=0x7fffce972670 "") at p6original.c:4
4     printf("Enter the string: \n");
(gdb) n
Enter the string: 
5     scanf("%s",a);
(gdb) n
1
6   }
(gdb) n
main () at p6original.c:25
25    reverse_a=str_reverse(a);
(gdb) s
str_reverse (a=0x7fffce972670 "1") at p6original.c:9
9     int i,m=0;
(gdb) n
10    for(i=0;a[i]!='\0';i++)
(gdb) n
11      m++;
(gdb) n
10    for(i=0;a[i]!='\0';i++)
(gdb) n
12    return m;
(gdb) n
13  }
(gdb) n
 
 gcc -g p7original.c
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x877: file p7original.c, line 22.
(gdb) r
Starting program: /home/runner/ppa-IA2-practice2-6/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p7original.c:22
22  {
(gdb) n
23    Triangle t = input_triangle();
(gdb) s
input_triangle () at p7original.c:7
7   {
(gdb) n
9     printf("Enter the base, altitude of a triangle:\n");
(gdb) n
Enter the base, altitude of a triangle:
10    scanf("%f %f", &t.base, &t.altitude);
(gdb) n
2
3
11    return t;
(gdb) n
12  }
(gdb) n
 
 gcc -g p8original.c
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0xaf9: file p8original.c, line 63.
(gdb) r
Starting program: /home/runner/ppa-IA2-practice2-6/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p8original.c:63
63  {
(gdb) n
64    int n = input_n();
(gdb) s
input_n () at p8original.c:8
8   {
(gdb) n
10    printf("Enter the number of triangles: \n");
(gdb) n
Enter the number of triangles: 
11    scanf("%d",&n);
(gdb) n
4
12    return n;
(gdb) n
13  }
(gdb) n
main () at p8original.c:65
65    Triangle t[n];
(gdb) s
66    input_n_triangles(n, t);
(gdb) s
input_n_triangles (n=4, t=0x7fffcb496960) at p8original.c:23
23    for(int i=0;i<n;i++)
(gdb) n
25      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
2
5
23    for(int i=0;i<n;i++)
(gdb) n
25      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
5
3
23    for(int i=0;i<n;i++)
(gdb) n
25      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
6
9
23    for(int i=0;i<n;i++)
(gdb) n
25      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
1
2
23    for(int i=0;i<n;i++)
(gdb) n
27  }
(gdb) n
main () at p8original.c:67
67    find_areas_n(n, t);
(gdb) s
find_areas_n (n=4, t=0x7fffcb496960) at p8original.c:34
34    for (int i = 0; i < n; i++)
(gdb) n
36      find_area(&t[i]);
(gdb) n
34    for (int i = 0; i < n; i++)
(gdb) n
36      find_area(&t[i]);
(gdb) n
34    for (int i = 0; i < n; i++)
(gdb) n
36      find_area(&t[i]);
(gdb) n
34    for (int i = 0; i < n; i++)
(gdb) n
36      find_area(&t[i]);
(gdb) s
find_area (t=0x7fffcb496984) at p8original.c:30
30    t->area=0.5*(t->base)*(t->altitude);
(gdb) n
31  }
(gdb) n
find_areas_n (n=4, t=0x7fffcb496960) at p8original.c:34
34    for (int i = 0; i < n; i++)
(gdb) n
38  }
(gdb) n
main () at p8original.c:68
68    Triangle small = find_smallest_triangle(n, t);
(gdb) n
69    output(n, t, small);
(gdb) n
Smallest among 2.0, 5.0 and
Smallest among 5.0, 3.0 and
Smallest among 6.0, 9.0 and
1.0, 2.0
is
triangle with base = 1.0 and altitude = 2.0 having area = 1.0
70    return 0;
(gdb) continue
Continuing.
[Inferior 1 (process 1489) exited normally]
(gdb) quit
 